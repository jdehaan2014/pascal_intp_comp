unit uCodeGen;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, ubackend, dateutils, ucode, uGenericInterfaces, umessages;

type

  { TCodeGenerator }

  TCodeGenerator = class(TBackEnd)
    public
      procedure Process(AICode: IIntermediateCode;
        ASymtabStack: ISymtabStack); override;
  end;

implementation


{ TCodeGenerator }

// Process the intermediate code and the symbol table generated by the
// parser.  To be implemented by a compiler or an interpreter subclass.
procedure TCodeGenerator.Process(AICode: IIntermediateCode;
  ASymtabStack: ISymtabStack);
var
  StartTime: TDateTime;
  ElapsedTime: Double;
  InstructionCount: integer;
begin
  StartTime := TimeOf(Now);

  InstructionCount := 0;

  ElapsedTime := SecondSpan(StartTime, TimeOf(Now));

  SendMessage(TMessage.Create(mtCompilerSummary,
    TCompilerSummaryMsg.Create(InstructionCount, ElapsedTime)));

end;



end.

